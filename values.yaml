project: ""
contextList: ""
rancher:
  clusterId: ""
  projectId: ""

git:
  repository:
  branchDefault: master

webhook:
  tokenSecretName: ""
  tokenSecretKey: "token"

kubectl:
  server: ""
  tokenSecretName: ""
  tokenSecretKey: token

k8sJobsNamespace:

registry:
  url: harbor.fabrique.social.gouv.fr
  # url: registry2.dev2.fabrique.social.gouv.fr
  pushPath:
  secretName: harbor-creds
  # secretName: registry2-creds
  userKey: user
  passKey: pass
  pushTag: latest
  cacheTag: buildcache
  cacheUrl: registry.dev2.fabrique.social.gouv.fr
  cachePushPath:
  cacheSecretName: registry-creds
  cacheUserKey: user
  cachePassKey: pass

build:
  context: ""
  dockerfile: ""

buildkit:
  image: moby/buildkit
  # tag: "master-rootless
  tag: v0.8.1-rootless
docker:
  image: docker
  tag: stable

deployJob:
  image: registry.gitlab.factory.social.gouv.fr/socialgouv/sre/k8s-ci/k8s-ci-deploy
  imageTag: latest

gitclone:
  image: alpine/git
  tag: v2.30.0

labels: {}

env: {}

replicaCount: 1

image:
  repository: registry.gitlab.factory.social.gouv.fr/socialgouv/sre/k8s-ci
  tag: latest
  pullPolicy: Always

imagePullSecret: webhook-receiver-pullsecret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: webhook-receiver.chart.local
      paths:
        - /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

actions: {}
files: {}

hooks:
  ci:
    enable: true
    hook:
      id: ci
      execute-command: /usr/local/bin/k8s-ci-run-job
      trigger-rule:
        match:
          type: value
          value: '{{ getenv "WEBHOOK_TOKEN" | js }}'
          parameter:
            source: url
            name: token
      command-working-directory: /opt
      response-headers:
        - name: Content-Type
          value: application/json
      include-command-output-in-response: true
      pass-environment-to-command:
      - source: url
        name: action
        envname: CI_ACTION
      - source: url
        name: branch
        envname: CI_BRANCH
      - source: url
        name: context
        envname: CI_CONTEXT
      - source: url
        name: production
        envname: CI_PRODUCTION
      - source: url
  # Leave this hook on all the time, disabling it will break livenessProbe
  status:
    enable: true
    hook:
      id: status
      execute-command: /usr/local/bin/k8s-ci-status
      response-message: Online
      include-command-output-in-response: true