apiVersion: batch/v1
kind: Job
metadata:
  name: pipeline-{{.Env.K8SCI_GID}}-job-deploy-{{.Env.K8SCI_CONTEXT}}
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 600
  ttlSecondsAfterFinished: 1800
  template:
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      restartPolicy: Never
      initContainers:
        - name: git-clone-repo
          image: alpine/git:v2.30.0
          command:
            - sh
            - -c
            - |
              git clone \
                --depth 1 \
                {{.Env.K8SCI_REPOSITORY}} \
                --branch {{.Env.K8SCI_BRANCH}} \
                --single-branch \
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
      containers:
        - name: k8s-deploy
          image: {{env.Getenv "K8SCI_DEPLOY_JOB_IMAGE" "registry.gitlab.factory.social.gouv.fr/socialgouv/sre/k8s-ci/runner"}}:{{env.Getenv "K8SCI_DEPLOY_JOB_TAG" "latest"}}
          env:
            - name: K8SCI_KUBECONFIG
              value: {{env.Getenv "K8SCI_KUBECONFIG" "/.kube/config"}}
            - name: K8SCI_K8S_SERVER
              value: {{.Env.K8SCI_K8S_DEPLOY_SERVER}}
            - name: K8SCI_K8S_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{.Env.K8SCI_K8S_TOKEN_SECRET_NAME}}
                  key: {{.Env.K8SCI_K8S_TOKEN_SECRET_KEY}}
            - name: HELM_ARGS
              value: |
{{ .Env.K8SCI_HELM_ARGS | strings.TrimSpace | strings.Indent 21 }}
            - name: HELM_CHART
              value: {{.Env.K8SCI_HELM_CHART}}
            - name: HELM_RELEASE
              value: {{.Env.K8SCI_HELM_RELEASE}}
          workingDir: /workspace
          command:
            - /bin/sh
            - -c
            - |
              set -e
              /opt/k8sci-init-kubeconfig
              helm -n {{.Env.K8SCI_K8S_DEPLOY_NS}} template \
                $HELM_ARGS \
                $HELM_RELEASE $HELM_CHART \
                | kubectl \
                  --namespace={{.Env.K8SCI_K8S_DEPLOY_NS}} \
                  apply -f -
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              readOnly: true
              mountPath: /workspace
      volumes:
        - name: workspace
          emptyDir: {}